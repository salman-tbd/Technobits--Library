# Generated by Django 5.0.14 on 2025-09-17 13:29

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference_id', models.CharField(max_length=50, unique=True)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=255)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255)),
                ('stripe_charge_id', models.CharField(blank=True, max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled'), ('disputed', 'Disputed')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('payment_method_type', models.CharField(choices=[('card', 'Credit/Debit Card'), ('bank_transfer', 'Bank Transfer'), ('digital_wallet', 'Digital Wallet'), ('other', 'Other')], max_length=50)),
                ('payment_method_details', models.JSONField(blank=True, default=dict)),
                ('application_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('processing_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('receipt_email', models.EmailField(blank=True, max_length=254)),
                ('receipt_number', models.CharField(blank=True, max_length=50)),
                ('receipt_url', models.URLField(blank=True)),
                ('billing_details', models.JSONField(blank=True, default=dict)),
                ('failure_code', models.CharField(blank=True, max_length=50)),
                ('failure_message', models.TextField(blank=True)),
                ('dispute_reason', models.CharField(blank=True, max_length=100)),
                ('dispute_status', models.CharField(blank=True, max_length=50)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('succeeded_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentIntent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_payment_intent_id', models.CharField(max_length=255, unique=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.50'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('requires_payment_method', 'Requires Payment Method'), ('requires_confirmation', 'Requires Confirmation'), ('requires_action', 'Requires Action'), ('processing', 'Processing'), ('requires_capture', 'Requires Capture'), ('canceled', 'Canceled'), ('succeeded', 'Succeeded')], max_length=50)),
                ('payment_method_id', models.CharField(blank=True, max_length=255)),
                ('payment_method_type', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('client_secret', models.CharField(blank=True, max_length=255)),
                ('application_fee_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('capture_method', models.CharField(default='automatic', max_length=20)),
                ('confirmation_method', models.CharField(default='automatic', max_length=20)),
                ('receipt_email', models.EmailField(blank=True, max_length=254)),
                ('statement_descriptor', models.CharField(blank=True, max_length=22)),
                ('statement_descriptor_suffix', models.CharField(blank=True, max_length=10)),
                ('shipping_address', models.JSONField(blank=True, null=True)),
                ('shipping_name', models.CharField(blank=True, max_length=255)),
                ('shipping_phone', models.CharField(blank=True, max_length=20)),
                ('processing_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('net_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('last_payment_error', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('succeeded_at', models.DateTimeField(blank=True, null=True)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_intents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_event_id', models.CharField(max_length=255, unique=True)),
                ('event_type', models.CharField(max_length=100)),
                ('event_data', models.JSONField()),
                ('processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='payments.payment')),
                ('payment_intent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='payments.paymentintent')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_intent',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment', to='payments.paymentintent'),
        ),
        migrations.CreateModel(
            name='CheckoutSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_session_id', models.CharField(max_length=255, unique=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255)),
                ('mode', models.CharField(choices=[('payment', 'Payment'), ('setup', 'Setup'), ('subscription', 'Subscription')], default='payment', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('complete', 'Complete'), ('expired', 'Expired')], default='open', max_length=20)),
                ('amount_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('success_url', models.URLField()),
                ('cancel_url', models.URLField()),
                ('checkout_url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkout_sessions', to=settings.AUTH_USER_MODEL)),
                ('payment_intent', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checkout_session', to='payments.paymentintent')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_payment_method_id', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(choices=[('card', 'Card'), ('bank_account', 'Bank Account'), ('digital_wallet', 'Digital Wallet')], max_length=20)),
                ('card_brand', models.CharField(blank=True, max_length=20)),
                ('card_last4', models.CharField(blank=True, max_length=4)),
                ('card_exp_month', models.IntegerField(blank=True, null=True)),
                ('card_exp_year', models.IntegerField(blank=True, null=True)),
                ('card_funding', models.CharField(blank=True, max_length=20)),
                ('card_country', models.CharField(blank=True, max_length=2)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('bank_last4', models.CharField(blank=True, max_length=4)),
                ('bank_routing_number', models.CharField(blank=True, max_length=20)),
                ('bank_account_type', models.CharField(blank=True, max_length=20)),
                ('wallet_type', models.CharField(blank=True, max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('billing_details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_refund_id', models.CharField(max_length=255, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=3)),
                ('reason', models.CharField(blank=True, choices=[('duplicate', 'Duplicate'), ('fraudulent', 'Fraudulent'), ('requested_by_customer', 'Requested by Customer'), ('expired_uncaptured_charge', 'Expired Uncaptured Charge'), ('other', 'Other')], max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('receipt_number', models.CharField(blank=True, max_length=50)),
                ('failure_reason', models.CharField(blank=True, max_length=100)),
                ('failure_balance_transaction', models.CharField(blank=True, max_length=255)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.payment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='paymentintent',
            index=models.Index(fields=['user', '-created_at'], name='payments_pa_user_id_77db0f_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentintent',
            index=models.Index(fields=['status', '-created_at'], name='payments_pa_status_6cb6dd_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentintent',
            index=models.Index(fields=['stripe_payment_intent_id'], name='payments_pa_stripe__02a25f_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentintent',
            index=models.Index(fields=['stripe_customer_id'], name='payments_pa_stripe__9e3080_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentevent',
            index=models.Index(fields=['event_type', '-created_at'], name='payments_pa_event_t_c8502b_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentevent',
            index=models.Index(fields=['processed', '-created_at'], name='payments_pa_process_158059_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentevent',
            index=models.Index(fields=['stripe_event_id'], name='payments_pa_stripe__ee8645_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['user', '-created_at'], name='payments_pa_user_id_7a85fd_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', '-created_at'], name='payments_pa_status_21ed42_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['reference_id'], name='payments_pa_referen_7b9331_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['stripe_payment_intent_id'], name='payments_pa_stripe__6fe52c_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['stripe_customer_id'], name='payments_pa_stripe__fff206_idx'),
        ),
        migrations.AddIndex(
            model_name='checkoutsession',
            index=models.Index(fields=['user', '-created_at'], name='payments_ch_user_id_4ab3c9_idx'),
        ),
        migrations.AddIndex(
            model_name='checkoutsession',
            index=models.Index(fields=['status', '-created_at'], name='payments_ch_status_0e8a34_idx'),
        ),
        migrations.AddIndex(
            model_name='checkoutsession',
            index=models.Index(fields=['stripe_session_id'], name='payments_ch_stripe__5256b4_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['user', '-created_at'], name='payments_pa_user_id_d2fba0_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['stripe_payment_method_id'], name='payments_pa_stripe__ffc15c_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['is_default', 'is_active'], name='payments_pa_is_defa_8fc6eb_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['payment', '-created_at'], name='payments_re_payment_b8f2d9_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['status', '-created_at'], name='payments_re_status_3f2058_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['stripe_refund_id'], name='payments_re_stripe__bc040b_idx'),
        ),
    ]
