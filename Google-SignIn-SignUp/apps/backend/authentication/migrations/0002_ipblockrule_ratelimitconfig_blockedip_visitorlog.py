# Generated by Django 5.0 on 2025-09-18 08:32

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IPBlockRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('request_path_pattern', models.CharField(blank=True, help_text='URL pattern to match (regex supported)', max_length=500, null=True)),
                ('max_attempts', models.IntegerField(default=10, help_text='Max attempts before blocking')),
                ('time_window', models.IntegerField(default=300, help_text='Time window in seconds')),
                ('block_duration', models.IntegerField(default=3600, help_text='Block duration in seconds')),
                ('is_permanent_block', models.BooleanField(default=False)),
                ('send_alert', models.BooleanField(default=True)),
                ('alert_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'IP Block Rule',
                'verbose_name_plural': 'IP Block Rules',
                'db_table': 'auth_ip_block_rule',
            },
        ),
        migrations.CreateModel(
            name='RateLimitConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Configuration name', max_length=100, unique=True)),
                ('login_ip_limit_per_minute', models.IntegerField(default=5, help_text='Max login attempts per IP per minute')),
                ('login_ip_limit_per_hour', models.IntegerField(default=20, help_text='Max login attempts per IP per hour')),
                ('login_ip_limit_per_day', models.IntegerField(default=100, help_text='Max login attempts per IP per day')),
                ('login_user_limit_per_minute', models.IntegerField(default=3, help_text='Max login attempts per user per minute')),
                ('login_user_limit_per_hour', models.IntegerField(default=10, help_text='Max login attempts per user per hour')),
                ('login_user_limit_per_day', models.IntegerField(default=50, help_text='Max login attempts per user per day')),
                ('api_ip_limit_per_minute', models.IntegerField(default=60, help_text='Max API requests per IP per minute')),
                ('api_ip_limit_per_hour', models.IntegerField(default=1000, help_text='Max API requests per IP per hour')),
                ('api_user_limit_per_minute', models.IntegerField(default=100, help_text='Max API requests per user per minute')),
                ('api_user_limit_per_hour', models.IntegerField(default=2000, help_text='Max API requests per user per hour')),
                ('ip_lockout_duration', models.IntegerField(default=900, help_text='IP lockout duration in seconds (15 minutes)')),
                ('user_lockout_duration', models.IntegerField(default=600, help_text='User lockout duration in seconds (10 minutes)')),
                ('enable_progressive_delays', models.BooleanField(default=True, help_text='Enable progressive delay increases')),
                ('suspicious_activity_threshold', models.IntegerField(default=3, help_text='Failed attempts before marking as suspicious')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Rate Limit Configuration',
                'verbose_name_plural': 'Rate Limit Configurations',
                'db_table': 'auth_rate_limit_config',
            },
        ),
        migrations.CreateModel(
            name='BlockedIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('reason', models.CharField(max_length=200)),
                ('blocked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('block_expires_at', models.DateTimeField(blank=True, null=True)),
                ('attempt_count', models.IntegerField(default=0)),
                ('last_attempt_at', models.DateTimeField(blank=True, null=True)),
                ('is_permanent', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('blocked_by_admin', models.BooleanField(default=False)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.ipblockrule')),
            ],
            options={
                'verbose_name': 'Blocked IP',
                'verbose_name_plural': 'Blocked IPs',
                'db_table': 'auth_blocked_ip',
                'indexes': [models.Index(fields=['ip_address', 'is_active'], name='auth_blocke_ip_addr_36d6e0_idx'), models.Index(fields=['block_expires_at'], name='auth_blocke_block_e_942f1b_idx')],
            },
        ),
        migrations.CreateModel(
            name='VisitorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('request_path', models.CharField(max_length=500)),
                ('request_method', models.CharField(max_length=10)),
                ('is_authenticated', models.BooleanField(default=False)),
                ('username_attempted', models.CharField(blank=True, max_length=150, null=True)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('unix_timestamp', models.BigIntegerField(default=0)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visitor_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Visitor Log',
                'verbose_name_plural': 'Visitor Logs',
                'db_table': 'auth_visitor_log',
                'indexes': [models.Index(fields=['ip_address', 'timestamp'], name='auth_visito_ip_addr_9e44e8_idx'), models.Index(fields=['user', 'timestamp'], name='auth_visito_user_id_1bf4cb_idx'), models.Index(fields=['session_key', 'timestamp'], name='auth_visito_session_e74d87_idx'), models.Index(fields=['request_path', 'timestamp'], name='auth_visito_request_f4b225_idx'), models.Index(fields=['is_suspicious'], name='auth_visito_is_susp_5505ca_idx')],
            },
        ),
    ]
